{
  "cases": [
    {
      "name": "getIntegerValue(correctIntVar, fallback) => intVal",
      "expression": "@{getIntegerValue('abc', 456)}",
      "expected": {
        "type": "integer",
        "value": 123
      },
      "variables": [
        {
          "type": "integer",
          "name": "abc",
          "value": 123
        }
      ],
      "platforms": [
        "android",
        "web",
        "ios"
      ]
    },
    {
      "name": "getIntegerValue(incorrectIntVar, fallback) => intVal",
      "expression": "@{getIntegerValue('abc', 456)}",
      "expected": {
        "type": "integer",
        "value": 456
      },
      "variables": [
        {
          "type": "number",
          "name": "abc",
          "value": 123.0
        }
      ],
      "platforms": [
        "android",
        "web",
        "ios"
      ]
    },
    {
      "name": "getIntegerValue(nonexistentIntVar, fallback) => intVal",
      "expression": "@{getIntegerValue('abc', 456)}",
      "expected": {
        "type": "integer",
        "value": 456
      },
      "variables": [],
      "platforms": [
        "android",
        "web",
        "ios"
      ]
    },
    {
      "name": "getNumberValue(correctNumberVar, fallback) => numberVal",
      "expression": "@{getNumberValue('abc', 456.0)}",
      "expected": {
        "type": "number",
        "value": 123.0
      },
      "variables": [
        {
          "type": "number",
          "name": "abc",
          "value": 123.0
        }
      ],
      "platforms": [
        "android",
        "web",
        "ios"
      ]
    },
    {
      "name": "getNumberValue(incorrectNumberVar, fallback) => numberVal",
      "expression": "@{getNumberValue('abc', 456.0)}",
      "expected": {
        "type": "number",
        "value": 456.0
      },
      "variables": [
        {
          "type": "integer",
          "name": "abc",
          "value": 123
        }
      ],
      "platforms": [
        "android",
        "web",
        "ios"
      ]
    },
    {
      "name": "getNumberValue(nonexistentNumberVar, fallback) => numberVal",
      "expression": "@{getNumberValue('abc', 456.0)}",
      "expected": {
        "type": "number",
        "value": 456.0
      },
      "variables": [],
      "platforms": [
        "android",
        "web",
        "ios"
      ]
    },
    {
      "name": "getBooleanValue(correctBooleanVar, fallback) => booleanVal",
      "expression": "@{getBooleanValue('abc', false)}",
      "expected": {
        "type": "boolean",
        "value": true
      },
      "variables": [
        {
          "type": "boolean",
          "name": "abc",
          "value": true
        }
      ],
      "platforms": [
        "android",
        "web",
        "ios"
      ]
    },
    {
      "name": "getBooleanValue(incorrectBooleanVar, fallback) => booleanVal",
      "expression": "@{getBooleanValue('abc', false)}",
      "expected": {
        "type": "boolean",
        "value": false
      },
      "variables": [
        {
          "type": "integer",
          "name": "abc",
          "value": 123
        }
      ],
      "platforms": [
        "android",
        "web",
        "ios"
      ]
    },
    {
      "name": "getBooleanValue(nonexistentBooleanVar, fallback) => booleanVal",
      "expression": "@{getBooleanValue('abc', false)}",
      "expected": {
        "type": "boolean",
        "value": false
      },
      "variables": [],
      "platforms": [
        "android",
        "web",
        "ios"
      ]
    },
    {
      "name": "getStringValue(correctStringVar, fallback) => stringVal",
      "expression": "@{getStringValue('abc', 'b')}",
      "expected": {
        "type": "string",
        "value": "a"
      },
      "variables": [
        {
          "type": "string",
          "name": "abc",
          "value": "a"
        }
      ],
      "platforms": [
        "android",
        "web",
        "ios"
      ]
    },
    {
      "name": "getStringValue(incorrectStringVar, fallback) => stringVal",
      "expression": "@{getStringValue('abc', 'b')}",
      "expected": {
        "type": "string",
        "value": "b"
      },
      "variables": [
        {
          "type": "integer",
          "name": "abc",
          "value": 123
        }
      ],
      "platforms": [
        "android",
        "web",
        "ios"
      ]
    },
    {
      "name": "getStringValue(nonexistentStringVar, fallback) => stringVal",
      "expression": "@{getStringValue('abc', 'b')}",
      "expected": {
        "type": "string",
        "value": "b"
      },
      "variables": [],
      "platforms": [
        "android",
        "web",
        "ios"
      ]
    },
    {
      "name": "getColorValue(correctColorVar, fallbackVar) => colorVal",
      "expression": "@{getColorValue('abc', fallback)}",
      "expected": {
        "type": "color",
        "value": "#FF000000"
      },
      "variables": [
        {
          "type": "color",
          "name": "abc",
          "value": "#FF000000"
        },
        {
          "type": "color",
          "name": "fallback",
          "value": "#FFFFFFFF"
        }
      ],
      "platforms": [
        "android",
        "web",
        "ios"
      ]
    },
    {
      "name": "getColorValue(incorrectColorVar, fallbackVar) => colorVal",
      "expression": "@{getColorValue('abc', fallback)}",
      "expected": {
        "type": "color",
        "value": "#FFFFFFFF"
      },
      "variables": [
        {
          "type": "integer",
          "name": "abc",
          "value": 123
        },
        {
          "type": "color",
          "name": "fallback",
          "value": "#FFFFFFFF"
        }
      ],
      "platforms": [
        "android",
        "web",
        "ios"
      ]
    },
    {
      "name": "getColorValue(nonexistentColorVar, fallbackVar) => colorVal",
      "expression": "@{getColorValue('abc', fallback)}",
      "expected": {
        "type": "color",
        "value": "#FFFFFFFF"
      },
      "variables": [
        {
          "type": "color",
          "name": "fallback",
          "value": "#FFFFFFFF"
        }
      ],
      "platforms": [
        "android",
        "web",
        "ios"
      ]
    },
    {
      "name": "getColorValue(correctColorVar, fallback) => colorVal (1)",
      "expression": "@{getColorValue('abc', '#FFFFFFFF')}",
      "expected": {
        "type": "color",
        "value": "#FF000000"
      },
      "variables": [
        {
          "type": "color",
          "name": "abc",
          "value": "#FF000000"
        }
      ],
      "platforms": [
        "android",
        "web",
        "ios"
      ]
    },
    {
      "name": "getColorValue(incorrectColorVar, fallback) => colorVal (1)",
      "expression": "@{getColorValue('abc', '#FFFFFFFF')}",
      "expected": {
        "type": "color",
        "value": "#FFFFFFFF"
      },
      "variables": [
        {
          "type": "integer",
          "name": "abc",
          "value": 123
        }
      ],
      "platforms": [
        "android",
        "web",
        "ios"
      ]
    },
    {
      "name": "getColorValue(nonexistentColorVar, fallback) => colorVal (1)",
      "expression": "@{getColorValue('abc', '#FFFFFFFF')}",
      "expected": {
        "type": "color",
        "value": "#FFFFFFFF"
      },
      "variables": [],
      "platforms": [
        "android",
        "web",
        "ios"
      ]
    },
    {
      "name": "getColorValue(correctColorVar, fallback) => colorVal (2)",
      "expression": "@{getColorValue('abc', '#fff')}",
      "expected": {
        "type": "color",
        "value": "#FF000000"
      },
      "variables": [
        {
          "type": "color",
          "name": "abc",
          "value": "#000"
        }
      ],
      "platforms": [
        "android",
        "web",
        "ios"
      ]
    },
    {
      "name": "getColorValue(incorrectColorVar, fallback) => colorVal (2)",
      "expression": "@{getColorValue('abc', '#fff')}",
      "expected": {
        "type": "color",
        "value": "#FFFFFFFF"
      },
      "variables": [
        {
          "type": "integer",
          "name": "abc",
          "value": 123
        }
      ],
      "platforms": [
        "android",
        "web",
        "ios"
      ]
    },
    {
      "name": "getColorValue(nonexistentColorVar, fallback) => colorVal (2)",
      "expression": "@{getColorValue('abc', '#fff')}",
      "expected": {
        "type": "color",
        "value": "#FFFFFFFF"
      },
      "variables": [],
      "platforms": [
        "android",
        "web",
        "ios"
      ]
    },
    {
      "name": "getUrlValue(correctUrlVar, fallbackVar) => urlVal",
      "expression": "@{getUrlValue('abc', fallback)}",
      "expected": {
        "type": "url",
        "value": "https://var"
      },
      "variables": [
        {
          "type": "url",
          "name": "abc",
          "value": "https://var"
        },
        {
          "type": "url",
          "name": "fallback",
          "value": "https://fallback"
        }
      ],
      "platforms": [
        "android",
        "web",
        "ios"
      ]
    },
    {
      "name": "getUrlValue(incorrectUrlVar, fallbackVar) => urlVal",
      "expression": "@{getUrlValue('abc', fallback)}",
      "expected": {
        "type": "url",
        "value": "https://fallback"
      },
      "variables": [
        {
          "type": "integer",
          "name": "abc",
          "value": 123
        },
        {
          "type": "url",
          "name": "fallback",
          "value": "https://fallback"
        }
      ],
      "platforms": [
        "android",
        "web",
        "ios"
      ]
    },
    {
      "name": "getUrlValue(nonexistentUrlVar, fallbackVar) => urlVal",
      "expression": "@{getUrlValue('abc', fallback)}",
      "expected": {
        "type": "url",
        "value": "https://fallback"
      },
      "variables": [
        {
          "type": "url",
          "name": "fallback",
          "value": "https://fallback"
        }
      ],
      "platforms": [
        "android",
        "web",
        "ios"
      ]
    },
    {
      "name": "getUrlValue(correctUrlVar, fallback) => urlVal (1)",
      "expression": "@{getUrlValue('abc', 'https://fallback')}",
      "expected": {
        "type": "url",
        "value": "https://var"
      },
      "variables": [
        {
          "type": "url",
          "name": "abc",
          "value": "https://var"
        }
      ],
      "platforms": [
        "android",
        "web",
        "ios"
      ]
    },
    {
      "name": "getUrlValue(incorrectUrlVar, fallback) => urlVal (1)",
      "expression": "@{getUrlValue('abc', 'https://fallback')}",
      "expected": {
        "type": "url",
        "value": "https://fallback"
      },
      "variables": [
        {
          "type": "integer",
          "name": "abc",
          "value": 123
        }
      ],
      "platforms": [
        "android",
        "web",
        "ios"
      ]
    },
    {
      "name": "getUrlValue(nonexistentUrlVar, fallback) => urlVal (1)",
      "expression": "@{getUrlValue('abc', 'https://fallback')}",
      "expected": {
        "type": "url",
        "value": "https://fallback"
      },
      "variables": [],
      "platforms": [
        "android",
        "web",
        "ios"
      ]
    }
  ]
}
