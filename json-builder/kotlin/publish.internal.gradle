import com.yandex.div.gradle.PublicationType

afterEvaluate {
    if (rootProject.ext.publishToMavenCentral) {
        signing {
            sign publishing.publications
            sign configurations.archives
        }
    }

    publishing {
        if (rootProject.ext.publishToBucket) {
            repositories {
                maven {
                    name 'bucket'
                    credentials {
                        username rootProject.ext.bucketUsername
                        password rootProject.ext.bucketPassword
                    }
                    def releaseUrl = "https://bucket.yandex-team.ru/v1/maven/yandex_mobile_releases/"
                    def snapshotUrl = "https://bucket.yandex-team.ru/v1/maven/yandex_mobile_snapshots/"
                    url = (rootProject.ext.publicationType == PublicationType.@release) ? releaseUrl : snapshotUrl
                }
            }
        }

        publications {
            release(MavenPublication) {
                pom {
                    name = "DivKit"
                    description = "DivKit is an open source Server-Driven UI (SDUI) framework. SDUI is a an emerging technique that leverage the server to build the user interfaces of their mobile app."
                    url = "http://divkit.tech/"

                    licenses {
                        license {
                            name = "Apache License, version 2.0"
                            url = "http://www.apache.org/licenses/LICENSE-2.0"
                            distribution = "repo"
                        }
                    }

                    scm {
                        connection = "scm:git://github.com/divkit/divkit.git"
                        developerConnection = "scm:git://github.com/divkit/divkit.git"
                        url = "https://github.com/divkit/divkit.git"
                    }

                    developers {
                        developer {
                            name = "Yandex"
                            url = "http://divkit.tech/"
                        }
                    }
                }
                ext.repo = 'release'
            }
        }
    }
}

task sourcesJar(type: Jar) {
    archiveClassifier = "sources"
    from sourceSets.main.allSource
}

task javadocJar(type: Jar) {
    archiveClassifier = 'javadoc'
    from javadoc.destinationDir
}

afterEvaluate {
    publishing {
        publications {
            release(MavenPublication) {
                artifact sourcesJar
                artifact javadocJar
                from components.java
                version divkitVersionName
            }
        }
    }
}


if (publishToBucket) {
    allprojects {
        afterEvaluate {
            if (plugins.hasPlugin("maven-publish")) {
                project.tasks.withType(PublishToMavenRepository) { task ->
                    publishInternalRelease.dependsOn(task)
                }
            }
        }
    }
}
